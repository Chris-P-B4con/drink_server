datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int           @id @default(autoincrement())
  createdAt  DateTime      @default(now())
  username   String        @unique
  email      String        @unique
  password   String
  privileges PrivilegeType @default(USER)

  drinks UserDrinks[]
  tokens Token[]
  Log    Log[]
  @@map(name: "user")
}

model Drinks {
  id        Int      @id @default(autoincrement())
  drinkName String   @unique
  volume    Float
  price     Float
  available Int
  image     String
  addedAt   DateTime @default(now())
  changedAt DateTime @updatedAt

  userDrinks UserDrinks[]

  @@map(name: "drinks")
}

model UserDrinks {
  id        Int       @id @default(autoincrement())
  orderedAt DateTime  @default(now())
  paid      Boolean   @default(false)
  paidAt    DateTime? @updatedAt

  drink   Drinks @relation(fields: [drinkId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
  drinkId Int
  userId  Int
  @@map(name: "userdrinks")
}

model Token {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  emailToken String?   @unique
  valid      Boolean   @default(true)
  expiration DateTime

  user   User @relation(fields: [userId], references: [id])
  userId Int
  @@map(name: "token")
}

model UserDrinksLog {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  
  
  user        User     @relation(fields: [userId], references: [id])
  userId      Int

  @@map(name: "userdrinkslog")
}

enum TokenType {
  EMAIL // used as a short lived token sent to the user's email
  SESSION
}

enum PrivilegeType {
  USER
  ADMIN
}
